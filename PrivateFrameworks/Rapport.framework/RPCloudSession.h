/* made by EzioChiu
   Image: /System/Library/PrivateFrameworks/Rapport.framework/Rapport
 */

@interface RPCloudSession : NSObject <NSSecureCoding, RPAuthenticatable, RPCloudXPCClientInterface, RPMessageable> {
    bool  _activateCalled;
    NSString * _destinationID;
    NSString * _destinationIDMulticast;
    NSString * _destinationIDUnicast;
    unsigned int  _destinationPort;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    id /* block */  _hidePasswordHandler;
    int  _internalState;
    id /* block */  _interruptionHandler;
    bool  _invalidateCalled;
    bool  _invalidateDone;
    id /* block */  _invalidationHandler;
    bool  _isClient;
    NSString * _label;
    CUPairingStream * _mainStream;
    unsigned int  _pairSetupFlags;
    CUPairingSession * _pairSetupSession;
    unsigned int  _pairVerifyFlags;
    CUPairingSession * _pairVerifySession;
    NSString * _password;
    int  _passwordType;
    id /* block */  _promptForPasswordHandler;
    RPCloudXPCConnection * _serverXPCCnx;
    NSString * _serviceIdentifier;
    id /* block */  _showPasswordHandler;
    unsigned int  _sourcePort;
    bool  _stepDone;
    NSError * _stepError;
    struct LogCategory { int x1; int x2; char *x3; unsigned int x4; char *x5; char *x6; int x7; struct LogCategory {} *x8; struct LogOutput {} *x9; struct LogOutput {} *x10; unsigned long long x11; unsigned long long x12; unsigned int x13; unsigned int x14; char *x15; struct LogCategoryPrivate {} *x16; } * _ucat;
    NSXPCConnection * _xpcCnx;
}

@property (nonatomic, retain) NSString *destinationID;
@property (nonatomic, copy) NSString *destinationIDMulticast;
@property (nonatomic, copy) NSString *destinationIDUnicast;
@property (nonatomic) unsigned int destinationPort;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic, copy) id /* block */ hidePasswordHandler;
@property (nonatomic, copy) id /* block */ interruptionHandler;
@property (nonatomic, copy) id /* block */ invalidationHandler;
@property (nonatomic, copy) NSString *label;
@property (nonatomic) unsigned int pairSetupFlags;
@property (nonatomic) unsigned int pairVerifyFlags;
@property (nonatomic, copy) NSString *password;
@property (nonatomic) int passwordType;
@property (nonatomic, copy) id /* block */ promptForPasswordHandler;
@property (nonatomic, retain) RPCloudXPCConnection *serverXPCCnx;
@property (nonatomic, copy) NSString *serviceIdentifier;
@property (nonatomic, copy) id /* block */ showPasswordHandler;
@property (nonatomic) unsigned int sourcePort;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_activateWithCompletion:(id /* block */)arg1 reactivate:(bool)arg2;
- (void)_clientPairSetup:(id)arg1 start:(bool)arg2;
- (void)_clientPairSetupCompleted:(id)arg1;
- (void)_clientRun;
- (void)_clientStartRequest;
- (void)_clientStartResponse:(id)arg1 fromID:(id)arg2;
- (void)_ensureXPCStarted;
- (void)_interrupted;
- (void)_invalidated;
- (void)_pairSetupInvalidate;
- (void)_pairVerifyInvalidate;
- (void)_receivedFrameHeader:(const struct { struct { unsigned char x_1_1_1; unsigned char x_1_1_2[3]; } x1; unsigned char x2[4]; }*)arg1 encryptedBodyPtr:(const char *)arg2 bodyLen:(unsigned long long)arg3 fromID:(id)arg4;
- (void)_receivedFrameHeader:(const struct { struct { unsigned char x_1_1_1; unsigned char x_1_1_2[3]; } x1; unsigned char x2[4]; }*)arg1 unencryptedBodyPtr:(const char *)arg2 bodyLen:(unsigned long long)arg3 fromID:(id)arg4;
- (void)_receivedStopUnencrypted:(id)arg1;
- (void)_run;
- (void)_sendFrameType:(unsigned char)arg1 destinationID:(id)arg2 unencryptedObject:(id)arg3 completion:(id /* block */)arg4;
- (void)_serverPairSetupCompleted:(id)arg1;
- (void)_serverPairSetupNext:(id)arg1;
- (void)_serverPairSetupStart;
- (void)_serverRun;
- (void)activateWithCompletion:(id /* block */)arg1;
- (void)dealloc;
- (void)deregisterEventID:(id)arg1;
- (void)deregisterRequestID:(id)arg1;
- (id)description;
- (id)destinationID;
- (id)destinationIDMulticast;
- (id)destinationIDUnicast;
- (unsigned int)destinationPort;
- (id)dispatchQueue;
- (void)encodeWithCoder:(id)arg1;
- (id /* block */)hidePasswordHandler;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id /* block */)interruptionHandler;
- (void)invalidate;
- (id /* block */)invalidationHandler;
- (id)label;
- (unsigned int)pairSetupFlags;
- (unsigned int)pairVerifyFlags;
- (id)password;
- (int)passwordType;
- (id /* block */)promptForPasswordHandler;
- (void)registerEventID:(id)arg1 options:(id)arg2 handler:(id /* block */)arg3;
- (void)registerRequestID:(id)arg1 options:(id)arg2 handler:(id /* block */)arg3;
- (void)sendEventID:(id)arg1 event:(id)arg2 destinationID:(id)arg3 options:(id)arg4 completion:(id /* block */)arg5;
- (void)sendRequestID:(id)arg1 request:(id)arg2 destinationID:(id)arg3 options:(id)arg4 responseHandler:(id /* block */)arg5;
- (id)serverXPCCnx;
- (id)serviceIdentifier;
- (void)setDestinationID:(id)arg1;
- (void)setDestinationIDMulticast:(id)arg1;
- (void)setDestinationIDUnicast:(id)arg1;
- (void)setDestinationPort:(unsigned int)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setHidePasswordHandler:(id /* block */)arg1;
- (void)setInterruptionHandler:(id /* block */)arg1;
- (void)setInvalidationHandler:(id /* block */)arg1;
- (void)setLabel:(id)arg1;
- (void)setPairSetupFlags:(unsigned int)arg1;
- (void)setPairVerifyFlags:(unsigned int)arg1;
- (void)setPassword:(id)arg1;
- (void)setPasswordType:(int)arg1;
- (void)setPromptForPasswordHandler:(id /* block */)arg1;
- (void)setServerXPCCnx:(id)arg1;
- (void)setServiceIdentifier:(id)arg1;
- (void)setShowPasswordHandler:(id /* block */)arg1;
- (void)setSourcePort:(unsigned int)arg1;
- (id /* block */)showPasswordHandler;
- (unsigned int)sourcePort;
- (void)tryPassword:(id)arg1;
- (void)xpcCloudReceivedFrameData:(id)arg1 fromID:(id)arg2;

@end
