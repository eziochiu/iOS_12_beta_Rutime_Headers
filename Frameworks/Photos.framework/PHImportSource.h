/* made by EzioChiu
   Image: /System/Library/Frameworks/Photos.framework/Photos
 */

@interface PHImportSource : PHImportExceptionRecorder {
    NSMutableArray * _assets;
    NSMutableDictionary * _assetsByOriginalName;
    unsigned long long  _batchCount;
    double  _batchDuration;
    double  _batchInterval;
    NSObject<OS_dispatch_queue> * _batchQueue;
    unsigned long long  _batchSize;
    NSDate * _batchStart;
    bool  _canShowProgress;
    unsigned long long  _completedItems;
    id /* block */  _completion;
    NSObject<OS_dispatch_queue> * _controlQueue;
    unsigned long long  _currentItemIndex;
    <PHImportSourceDelegate> * _delegate;
    bool  _deleteContentAllowed;
    NSObject<OS_dispatch_queue> * _dupPathCollectionQueue;
    NSDateFormatter * _dupeDateFormatter;
    NSMutableArray * _duplicateAssets;
    PHImportDuplicateChecker * _duplicateChecker;
    NSMutableArray * _errors;
    unsigned long long  _inFlight;
    NSObject<OS_dispatch_queue> * _itemProcessingQueue;
    NSObject<OS_dispatch_queue> * _itemQueue;
    NSMutableArray * _items;
    unsigned long long  _nextItemIndex;
    bool  _open;
    PHImportOptions * _options;
    NSMutableArray * _processed;
    unsigned long long  _processingConcurrency;
    NSObject<OS_dispatch_queue> * _processingQueue;
    NSProgress * _progress;
    NSMutableArray * _removedSourceFileIdentifiers;
    NSMutableSet * _renderedAssets;
    NSString * _uuid;
}

@property (nonatomic, retain) NSMutableArray *assets;
@property (nonatomic, retain) NSMutableDictionary *assetsByOriginalName;
@property (nonatomic) unsigned long long batchCount;
@property (nonatomic) double batchDuration;
@property (nonatomic) double batchInterval;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *batchQueue;
@property (nonatomic) unsigned long long batchSize;
@property (nonatomic, retain) NSDate *batchStart;
@property (nonatomic, readonly) bool canDeleteContent;
@property (readonly) bool canEject;
@property (readonly) bool canShowProgress;
@property (nonatomic) unsigned long long completedItems;
@property (nonatomic, copy) id /* block */ completion;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *controlQueue;
@property (nonatomic) unsigned long long currentItemIndex;
@property (nonatomic) <PHImportSourceDelegate> *delegate;
@property (nonatomic) bool deleteContentAllowed;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dupPathCollectionQueue;
@property (nonatomic, retain) NSDateFormatter *dupeDateFormatter;
@property (nonatomic, retain) NSMutableArray *duplicateAssets;
@property (nonatomic, retain) PHImportDuplicateChecker *duplicateChecker;
@property (retain) NSMutableArray *errors;
@property (nonatomic) unsigned long long inFlight;
@property (readonly) bool isAppleDevice;
@property (readonly) bool isAvailable;
@property (readonly) bool isCamera;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *itemProcessingQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *itemQueue;
@property (nonatomic, retain) NSMutableArray *items;
@property (readonly) NSString *name;
@property (nonatomic) unsigned long long nextItemIndex;
@property (nonatomic) bool open;
@property (nonatomic, retain) PHImportOptions *options;
@property (readonly) NSString *path;
@property (nonatomic, retain) NSMutableArray *processed;
@property (nonatomic) unsigned long long processingConcurrency;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *processingQueue;
@property (readonly) NSString *productKind;
@property (nonatomic, retain) NSProgress *progress;
@property (nonatomic, readonly) NSMutableArray *removedSourceFileIdentifiers;
@property (nonatomic, retain) NSMutableSet *renderedAssets;
@property (nonatomic, readonly) bool stalled;
@property (nonatomic, readonly) NSString *uuid;
@property (readonly) NSString *volumePath;

+ (id)baseFileNameByRemovingRenderMarkerInFileName:(id)arg1;

- (void).cxx_destruct;
- (void)addAsset:(id)arg1 toRemovedAssets:(id)arg2;
- (void)addItems:(id)arg1;
- (void)addSourceFileIdentifiersForRemovedFiles:(id)arg1;
- (id)additionalQueues;
- (id)assets;
- (id)assetsByOriginalName;
- (bool)batchComplete;
- (unsigned long long)batchCount;
- (double)batchDuration;
- (double)batchInterval;
- (id)batchQueue;
- (unsigned long long)batchSize;
- (id)batchStart;
- (void)beginWork;
- (bool)canDeleteContent;
- (bool)canEject;
- (bool)canShowProgress;
- (void)cancelAssetLoading;
- (id)checkForDuplicate:(id)arg1 considerItemsInTheTrash:(bool)arg2;
- (void)checkForDuplicates:(id)arg1 considerItemsInTrash:(bool)arg2 forEach:(id /* block */)arg3 atEnd:(id /* block */)arg4;
- (unsigned long long)completedItems;
- (id /* block */)completion;
- (id)controlQueue;
- (unsigned long long)currentItemIndex;
- (bool)date:(id)arg1 matchesDate:(id)arg2;
- (void)decrementInFlight;
- (id)delegate;
- (bool)deleteContentAllowed;
- (id)deleteImportAssets:(id)arg1 isConfirmed:(bool)arg2 isCancelable:(bool)arg3 atEnd:(id /* block */)arg4;
- (void)dispatchAssetDataRequestAsync:(id)arg1 usingBlock:(id /* block */)arg2;
- (id)dupPathCollectionQueue;
- (id)dupeDateFormatter;
- (id)duplicateAssets;
- (id)duplicateChecker;
- (void)eject;
- (void)endBatch;
- (void)endWork;
- (id)errors;
- (id)generatePPTData;
- (unsigned long long)inFlight;
- (void)incrementInFlight;
- (id)init;
- (bool)isAppleDevice;
- (bool)isAvailable;
- (bool)isCamera;
- (id)itemProcessingQueue;
- (id)itemQueue;
- (id)items;
- (id)loadAssetsForLibrary:(id)arg1 allowDuplicates:(bool)arg2 order:(id)arg3 atEnd:(id /* block */)arg4;
- (id)loadAssetsForLibrary:(id)arg1 allowDuplicates:(bool)arg2 order:(id)arg3 batchSize:(unsigned long long)arg4 atEnd:(id /* block */)arg5;
- (id)name;
- (unsigned long long)nextItemIndex;
- (bool)open;
- (id)options;
- (id)path;
- (bool)pathForAsset:(id)arg1 matchesAsset:(id)arg2;
- (void)pauseAssetLoading;
- (void)processAsset:(id)arg1 withProcessed:(id)arg2 atEnd:(id /* block */)arg3;
- (id)processItem:(id)arg1 applyingBlock:(id /* block */)arg2;
- (void)processNextItems;
- (bool)processPotentialJpegAsset:(id)arg1 plusRawAsset:(id)arg2;
- (id)processed;
- (unsigned long long)processingConcurrency;
- (id)processingQueue;
- (id)productKind;
- (id)progress;
- (void)removeAssets:(id)arg1;
- (id)removedSourceFileIdentifiers;
- (id)renderedAssets;
- (id)requestDeleteAssetsForRecords:(id)arg1;
- (void)resumeAssetLoading;
- (void)setAssets:(id)arg1;
- (void)setAssetsByOriginalName:(id)arg1;
- (void)setBatchCount:(unsigned long long)arg1;
- (void)setBatchDuration:(double)arg1;
- (void)setBatchInterval:(double)arg1;
- (void)setBatchQueue:(id)arg1;
- (void)setBatchSize:(unsigned long long)arg1;
- (void)setBatchStart:(id)arg1;
- (void)setCompletedItems:(unsigned long long)arg1;
- (void)setCompletion:(id /* block */)arg1;
- (void)setControlQueue:(id)arg1;
- (void)setCurrentItemIndex:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeleteContentAllowed:(bool)arg1;
- (void)setDupPathCollectionQueue:(id)arg1;
- (void)setDupeDateFormatter:(id)arg1;
- (void)setDuplicateAssets:(id)arg1;
- (void)setDuplicateChecker:(id)arg1;
- (void)setErrors:(id)arg1;
- (void)setInFlight:(unsigned long long)arg1;
- (void)setItemProcessingQueue:(id)arg1;
- (void)setItemQueue:(id)arg1;
- (void)setItems:(id)arg1;
- (void)setNextItemIndex:(unsigned long long)arg1;
- (void)setOpen:(bool)arg1;
- (void)setOptions:(id)arg1;
- (void)setProcessed:(id)arg1;
- (void)setProcessingConcurrency:(unsigned long long)arg1;
- (void)setProcessingQueue:(id)arg1;
- (void)setProgress:(id)arg1;
- (void)setRenderedAssets:(id)arg1;
- (bool)stalled;
- (id)uuid;
- (id)volumePath;

@end
