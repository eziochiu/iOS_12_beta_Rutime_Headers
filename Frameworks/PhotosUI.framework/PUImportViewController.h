/* made by EzioChiu
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI
 */

@interface PUImportViewController : PUPhotosGridViewController <PUImportActionCoordinatorDelegate, PUImportAlbumPickerDelegate, PUImportAssetsDataSourceManagerObserver, PUImportControllerImportCompletionDelegate, PUImportDisplayDelegate, PUImportHistorySectionHeaderViewDelegate, PUImportOneUpTransitioning, PUImportSectionedGridLayoutDelegate, PUSectionedGridLayoutDelegate, PXChangeObserver, PXSettingsKeyObserver, PXSwipeSelectionManagerDelegate, UIGestureRecognizerDelegate, UIPopoverPresentationControllerDelegate> {
    id  __cachedViewSizeTransitionContext;
    struct CGSize { 
        double width; 
        double height; 
    }  __cachedViewSizeTransitionContextSize;
    double  __collectionViewLayoutReferenceWidth;
    id  __pendingViewSizeTransitionContext;
    PUPhotosGridViewControllerSpec * __spec;
    bool  _acceptsLongPress;
    PUImportActionCoordinator * _actionCoordinator;
    PUImportAddToAlbumsBarItem * _albumPickerBarItem;
    UIBarButtonItem * _albumPickerCompactWidthBarButton;
    PUImportAddToAlbumsPickerViewController * _albumsPickerViewController;
    bool  _allowsSelection;
    bool  _animateHeaderActionButtonChanges;
    unsigned long long  _busyCount;
    bool  _canSkipDupCheckOnDelete;
    PUImportChangeDetailsCollectionViewHelper * _changeDetailsHelper;
    bool  _collapseAlreadyImportedSection;
    bool  _compactLayoutMode;
    PXNavigationTitleView * _compactWidthAlbumPickerBarButtonView;
    PUImportCustomViewBarButton * _compactWidthAlbumPickerButton;
    PUImportFloatingToolbarView * _compactWidthToolbar;
    NSLayoutConstraint * _compactWidthToolbarTopConstraint;
    bool  _completedAnImport;
    PUImportSessionInfo * _completedImportSessionInfo;
    UIBarButtonItem * _contentInfoBarButton;
    PXNavigationTitleView * _contentInfoBarButtonView;
    UIBarButtonItem * _deleteButtonItem;
    UIBarButtonItem * _deleteButtonItemIcon;
    NSTimer * _deletedItemsTimer;
    UITapGestureRecognizer * _doubleTapGestureRecognizer;
    PUImportFakePhotosDataSource * _fakePhotosDataSource;
    bool  _hasLoadedInitialBatchOfAssets;
    NSMutableDictionary * _headerHeightCache;
    UIBarButtonItem * _importButtonItem;
    struct __CFUserNotification { } * _importCompleteNotification;
    PUImportController * _importController;
    PUImportAssetsDataSource * _importDataSource;
    PUImportAssetsDataSourceManager * _importDataSourceManager;
    NSProgress * _importProgress;
    NSTimer * _initialBatchOfAssetsTimer;
    bool  _isLoadingInitialBatchOfAssets;
    bool  _isPeeking;
    NSMutableSet * _itemsBeingTransitioned;
    id  _mstreamd_pause_context;
    UILabel * _navigationLargeTitleAccessoryLabel;
    PXNavigationTitleView * _navigationTitleView;
    bool  _needsContentInsetUpdateForCompactWidthToolbar;
    bool  _needsDataReloadAfterAnimatingDataSourceChange;
    PUImportAssetsDataSource * _pendingDataSource;
    bool  _performingDataSourceChange;
    PUImportProgressBarItem * _progressButtonItem;
    UIBarButtonItem * _progressLabel;
    bool  _readingImportItems;
    PUImportHistorySectionHeaderView * _referenceHeaderView;
    double  _referenceWidth;
    bool  _shouldStayScrolledToBottom;
    bool  _skipDupCheckOnDelete;
    UIBarButtonItem * _stopBarItem;
    PXSwipeSelectionManager * _swipeSelectionManager;
    UITapGestureRecognizer * _tapGestureRecognizer;
}

@property (setter=_setCachedViewSizeTransitionContext:, nonatomic, retain) id _cachedViewSizeTransitionContext;
@property (setter=_setCachedViewSizeTransitionContextSize:, nonatomic) struct CGSize { double x1; double x2; } _cachedViewSizeTransitionContextSize;
@property (setter=_setCollectionViewLayoutReferenceWidth:, nonatomic) double _collectionViewLayoutReferenceWidth;
@property (setter=_setPendingViewSizeTransitionContext:, nonatomic, retain) id _pendingViewSizeTransitionContext;
@property (setter=_setSpec:, nonatomic, retain) PUPhotosGridViewControllerSpec *_spec;
@property (nonatomic, retain) PUImportActionCoordinator *actionCoordinator;
@property (nonatomic, retain) PUImportAddToAlbumsPickerViewController *albumsPickerViewController;
@property (nonatomic) bool animateHeaderActionButtonChanges;
@property (nonatomic, retain) PUImportChangeDetailsCollectionViewHelper *changeDetailsHelper;
@property (nonatomic) bool collapseAlreadyImportedSection;
@property (nonatomic, retain) PXNavigationTitleView *compactWidthAlbumPickerBarButtonView;
@property (nonatomic, retain) PUImportCustomViewBarButton *compactWidthAlbumPickerButton;
@property (nonatomic, retain) PUImportFloatingToolbarView *compactWidthToolbar;
@property (nonatomic, retain) NSLayoutConstraint *compactWidthToolbarTopConstraint;
@property (nonatomic, retain) PXNavigationTitleView *contentInfoBarButtonView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UITapGestureRecognizer *doubleTapGestureRecognizer;
@property (nonatomic, retain) PUImportFakePhotosDataSource *fakePhotosDataSource;
@property (nonatomic) bool hasLoadedInitialBatchOfAssets;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSMutableDictionary *headerHeightCache;
@property (nonatomic, retain) PUImportController *importController;
@property (nonatomic, retain) PUImportAssetsDataSource *importDataSource;
@property (nonatomic, retain) PUImportAssetsDataSourceManager *importDataSourceManager;
@property (nonatomic, retain) NSProgress *importProgress;
@property (nonatomic, retain) PHImportSource *importSource;
@property (nonatomic, retain) NSTimer *initialBatchOfAssetsTimer;
@property (nonatomic) bool isLoadingInitialBatchOfAssets;
@property (nonatomic) bool isPeeking;
@property (nonatomic, retain) NSMutableSet *itemsBeingTransitioned;
@property (nonatomic, readonly) UILabel *navigationLargeTitleAccessoryLabel;
@property (nonatomic, readonly) PXNavigationTitleView *navigationTitleView;
@property (nonatomic) bool needsContentInsetUpdateForCompactWidthToolbar;
@property (nonatomic) bool needsDataReloadAfterAnimatingDataSourceChange;
@property (nonatomic, retain) PUImportAssetsDataSource *pendingDataSource;
@property (nonatomic) bool performingDataSourceChange;
@property (nonatomic, retain) PUImportHistorySectionHeaderView *referenceHeaderView;
@property (nonatomic) double referenceWidth;
@property (nonatomic) bool shouldStayScrolledToBottom;
@property (readonly) Class superclass;
@property (nonatomic, retain) PXSwipeSelectionManager *swipeSelectionManager;

+ (id)totalSizeStringForItems:(id)arg1;

- (void).cxx_destruct;
- (void)_beginUninterruptibleOperation;
- (id)_bestReferenceItemIndexPath;
- (id)_cachedViewSizeTransitionContext;
- (struct CGSize { double x1; double x2; })_cachedViewSizeTransitionContextSize;
- (void)_cancelAlerts;
- (double)_collectionViewLayoutReferenceWidth;
- (void)_deleteItems:(id)arg1;
- (void)_deselectCell:(id)arg1;
- (void)_dismissPopupsAnimated:(bool)arg1;
- (void)_endImport;
- (void)_endUninterruptibleOperation;
- (void)_getDataForVisualSection:(long long)arg1 hasActionButton:(bool*)arg2 title:(id*)arg3 startDate:(id*)arg4 endDate:(id*)arg5;
- (id)_gridLayout;
- (void)_invalidateCachedViewSizeTransitionContext;
- (bool)_isItemVisibleAtIndex:(id)arg1;
- (void)_navigateToPhotoAtIndexPath:(id)arg1 animated:(bool)arg2 interactive:(bool)arg3;
- (id)_navigationViewControllerForViewController:(id)arg1;
- (id)_newGridLayoutFromSpec:(id)arg1;
- (id)_pendingViewSizeTransitionContext;
- (void)_selectCell:(id)arg1;
- (void)_setCachedViewSizeTransitionContext:(id)arg1;
- (void)_setCachedViewSizeTransitionContextSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_setCollectionViewLayoutReferenceWidth:(double)arg1;
- (void)_setPendingViewSizeTransitionContext:(id)arg1;
- (void)_setSpec:(id)arg1;
- (id)_spec;
- (long long)_titleViewVerticalSizeClassForExtendedTraitCollection:(id)arg1;
- (void)_updateBackdropGroupNameForHeaderView:(id)arg1;
- (void)_updateCell:(id)arg1 atIndex:(id)arg2;
- (void)_updateContentOffsetForPendingViewSizeTransition;
- (void)_updateItemViewAtIndex:(id)arg1;
- (void)_updateLayoutMetrics;
- (void)_updateToolbarAnimated:(bool)arg1;
- (id)accessibilityLabelForAlbumPickerControlWithDestination:(id)arg1;
- (id)actionCoordinator;
- (void)actionCoordinator:(id)arg1 didCompleteWithImportSession:(id)arg2 results:(id)arg3;
- (void)actionCoordinatorDidBeginDelete:(id)arg1;
- (void)actionCoordinatorDidBeginImport:(id)arg1;
- (void)actionCoordinatorDidCancelImport:(id)arg1;
- (void)actionCoordinatorDidEndDelete:(id)arg1;
- (void)actionCoordinatorWillBeginDelete:(id)arg1;
- (void)actionCoordinatorWillBeginImport:(id)arg1;
- (id)albumsPickerViewController;
- (bool)allowsPeeking;
- (bool)animateHeaderActionButtonChanges;
- (bool)anyAlreadyImportedItemsAreSelected;
- (bool)areAllItemsSelectedInAssetCollection:(id)arg1;
- (void)beginSwipeSelection;
- (bool)canBeginDoubleTapGesture:(id)arg1;
- (bool)canDragOut;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)cancelAlbumPickerPopover:(id)arg1;
- (id)changeDetailsHelper;
- (bool)collapseAlreadyImportedSection;
- (void)collectionSelected:(id)arg1;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (bool)compactLayoutMode;
- (id)compactWidthAlbumPickerBarButtonView;
- (id)compactWidthAlbumPickerButton;
- (id)compactWidthToolbar;
- (id)compactWidthToolbarTopConstraint;
- (void)configureCollectionViewGridLayout:(id)arg1;
- (void)configureSupplementaryView:(id)arg1 ofKind:(id)arg2 forIndexPath:(id)arg3;
- (id)contentInfoBarButtonView;
- (id)createOneUpTransitionController;
- (void)dealloc;
- (void)delete:(id)arg1;
- (id)deleteButtonItem;
- (void)didDismissPreviewViewController:(id)arg1 committing:(bool)arg2;
- (void)didTransitionFromViewController:(id)arg1 toViewController:(id)arg2 withTransitionItems:(id)arg3;
- (id)doubleTapGestureRecognizer;
- (void)endSwipeSelection;
- (id)fakePhotosDataSource;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)getEmptyPlaceholderViewTitle:(id*)arg1 message:(id*)arg2 buttonTitle:(id*)arg3 buttonAction:(id /* block */*)arg4;
- (struct CGSize { double x1; double x2; })gridItemSize;
- (void)handleDoubleTapGesture:(id)arg1;
- (void)handleImportCompleteAlertResponse:(struct __CFUserNotification { }*)arg1 flags:(unsigned long long)arg2;
- (void)handleLongPressGesture:(id)arg1;
- (void)handleNewDataSource:(id)arg1;
- (void)handlePhotoOrStackPinchGestureRecognizer:(id)arg1;
- (void)handleTapGesture:(id)arg1;
- (void)handleTouchEvent:(long long)arg1 forCell:(id)arg2;
- (bool)hasLoadedInitialBatchOfAssets;
- (id)headerHeightCache;
- (void)headerViewDidPressActionButton:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageRectFromPhotoView:(id)arg1;
- (void)import:(id)arg1;
- (void)importCell:(id)arg1 didRequestCancellationOfThumbnailRequestWithID:(long long)arg2;
- (long long)importCell:(id)arg1 requestImageForImportItem:(id)arg2 ofSize:(unsigned long long)arg3 completion:(id /* block */)arg4;
- (id)importController;
- (void)importController:(id)arg1 didCompleteImportWithImportSession:(id)arg2 results:(id)arg3 completion:(id /* block */)arg4;
- (id)importDataSource;
- (id)importDataSourceManager;
- (id)importDestinationForActionCoordinator:(id)arg1;
- (id)importProgress;
- (bool)importSectionedGridLayout:(id)arg1 shouldEmphasizeSection:(unsigned long long)arg2;
- (id)importSource;
- (id)init;
- (id)initWithSpec:(id)arg1;
- (id)initialBatchOfAssetsTimer;
- (void)installGestureRecognizers;
- (bool)isBusy;
- (bool)isImporting;
- (bool)isLoadingInitialBatchOfAssets;
- (bool)isPeeking;
- (id)itemsBeingTransitioned;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)navigationLargeTitleAccessoryLabel;
- (id)navigationTitleView;
- (bool)needsContentInsetUpdateForCompactWidthToolbar;
- (bool)needsDataReloadAfterAnimatingDataSourceChange;
- (id)newGridLayout;
- (void)notifyUserOfImportCompletionIfNeededWithImportSession:(id)arg1 results:(id)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)oneUpViewControllerForItemAtIndexPath:(id)arg1;
- (id)pendingDataSource;
- (bool)performingDataSourceChange;
- (void)presentAlbumPickerFromView:(id)arg1 orBarItem:(id)arg2;
- (void)presentOneUpViewController:(id)arg1 animated:(bool)arg2 interactive:(bool)arg3;
- (id)presentationController:(id)arg1 viewControllerForAdaptivePresentationStyle:(long long)arg2;
- (id)previewPresentationTransitioningDelegateForPosition:(struct CGPoint { double x1; double x2; })arg1 inSourceView:(id)arg2;
- (id)previewViewControllerForItemAtIndexPath:(id)arg1;
- (void)previewingContext:(id)arg1 commitViewController:(id)arg2;
- (id)previewingContext:(id)arg1 viewControllerForLocation:(struct CGPoint { double x1; double x2; })arg2;
- (id)referenceHeaderView;
- (double)referenceWidth;
- (void)reloadData;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (double)sectionedGridLayout:(id)arg1 accessibilitySectionHeaderHeightForVisualSection:(long long)arg2;
- (double)sectionedGridLayout:(id)arg1 sectionHeaderHeightForVisualSection:(long long)arg2;
- (id)sectionedGridLayoutAnchorItemForAdjustingContentOffset:(id)arg1;
- (void)selectAllSelectableItems;
- (struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })selectionIndexPathForItem:(id)arg1;
- (void)setActionCoordinator:(id)arg1;
- (void)setAlbumsPickerViewController:(id)arg1;
- (void)setAllItemsSelected:(bool)arg1 inAssetCollection:(id)arg2;
- (void)setAnimateHeaderActionButtonChanges:(bool)arg1;
- (void)setChangeDetailsHelper:(id)arg1;
- (void)setCollapseAlreadyImportedSection:(bool)arg1;
- (void)setCompactWidthAlbumPickerBarButtonView:(id)arg1;
- (void)setCompactWidthAlbumPickerButton:(id)arg1;
- (void)setCompactWidthToolbar:(id)arg1;
- (void)setCompactWidthToolbarTopConstraint:(id)arg1;
- (void)setContentInfoBarButtonView:(id)arg1;
- (void)setDoubleTapGestureRecognizer:(id)arg1;
- (void)setFakePhotosDataSource:(id)arg1;
- (void)setHasLoadedInitialBatchOfAssets:(bool)arg1;
- (void)setHeaderHeightCache:(id)arg1;
- (void)setImportController:(id)arg1;
- (void)setImportDataSource:(id)arg1;
- (void)setImportDataSourceManager:(id)arg1;
- (void)setImportProgress:(id)arg1;
- (void)setImportSource:(id)arg1;
- (void)setInitialBatchOfAssetsTimer:(id)arg1;
- (void)setIsLoadingInitialBatchOfAssets:(bool)arg1;
- (void)setIsPeeking:(bool)arg1;
- (void)setItemsBeingTransitioned:(id)arg1;
- (void)setNeedsContentInsetUpdateForCompactWidthToolbar;
- (void)setNeedsContentInsetUpdateForCompactWidthToolbar:(bool)arg1;
- (void)setNeedsDataReloadAfterAnimatingDataSourceChange:(bool)arg1;
- (void)setPendingDataSource:(id)arg1;
- (void)setPerformingDataSourceChange:(bool)arg1;
- (void)setReferenceHeaderView:(id)arg1;
- (void)setReferenceWidth:(double)arg1;
- (void)setShouldStayScrolledToBottom:(bool)arg1;
- (void)setSwipeSelectionManager:(id)arg1;
- (void)setUpCompactWidthToolbar;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (bool)shouldLongPressForOneUp;
- (bool)shouldStayScrolledToBottom;
- (void)showAlbumPicker:(id)arg1;
- (void)showProgress:(id)arg1;
- (void)startMonitoringImportProgress:(id)arg1;
- (void)stayScrolledToBottomIfAtBottom:(id)arg1;
- (void)stopImport:(id)arg1;
- (void)stopMonitoringImportProgress:(id)arg1;
- (id)swipeSelectionManager;
- (struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })swipeSelectionManager:(id)arg1 itemIndexPathAtLocation:(struct CGPoint { double x1; double x2; })arg2;
- (struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })swipeSelectionManager:(id)arg1 itemIndexPathClosestAboveLocation:(struct CGPoint { double x1; double x2; })arg2;
- (struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })swipeSelectionManager:(id)arg1 itemIndexPathClosestLeadingLocation:(struct CGPoint { double x1; double x2; })arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })targetFrameForTransitionItem:(id)arg1;
- (long long)thumbnailContentFillMode;
- (id)thumbnailForModel:(id)arg1;
- (id)titleForDestinationCollection:(id)arg1;
- (void)toggleAlreadyImportedExpansion;
- (void)traitCollectionDidChange:(id)arg1;
- (void)transitionFromDataSource:(id)arg1 toDataSource:(id)arg2 animated:(bool)arg3 completionHandler:(id /* block */)arg4;
- (id)transitionItemsForContext:(id)arg1;
- (void)uninstallGestureRecognizers;
- (void)updateAlreadyImportedHeaderIfVisible;
- (void)updateCompactWidthToolbarTopConstraint;
- (void)updateCompactWidthToolbarVisibilityForTraitCollection:(id)arg1;
- (void)updateContentInfoBarButtonTitlesWithItems:(id)arg1 sizeString:(id)arg2 itemsAreSelected:(bool)arg3;
- (void)updateContentInfoLabels;
- (void)updateContentInsetForCompactWidthToolbarIfNeeded;
- (void)updateDataSourceManagerFilters;
- (void)updateHeaderView:(id)arg1 forAlreadyImportedAssetCollection:(id)arg2;
- (void)updateHeaderView:(id)arg1 forAssetCollection:(id)arg2;
- (void)updateNavigationBarAnimated:(bool)arg1;
- (void)updateNavigationTitleViewVisibilityAnimated:(bool)arg1;
- (void)updateNavigationTitleWithItems:(id)arg1 sizeString:(id)arg2 itemsAreSelected:(bool)arg3;
- (bool)updateSpec;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (bool)wantsPlaceholderView;
- (void)willPresentPreviewViewController:(id)arg1 forLocation:(struct CGPoint { double x1; double x2; })arg2 inSourceView:(id)arg3;
- (void)willTransitionFromViewController:(id)arg1 toViewController:(id)arg2 withTransitionItems:(id)arg3;

@end
